@model Protobuild.Website.Models.HomeModel

<div class="jumbotron">
    <h1>Cross-platform C#</h1>
    <p class="lead">
        Project generation for every platform.  Define your project content
        once and compile code for every platform, in any IDE or build system,
        on any operating system.
    </p>
    <p>
        <div class="btn-group btn-block" style="width: 330px;">
            @{
                var primaryInstaller = Model.Installers.FirstOrDefault(x => x.Platform == Model.DetectedPlatform);

                if (primaryInstaller == null)
                {
                    primaryInstaller = Model.Installers.First();
                }

                var primaryUri = "";
                var primaryClick = "";

                if (primaryInstaller.Url == null)
                {
                    primaryUri = "#";
                    primaryClick = "$('#cmdmodal').modal(); $('#command').val('" + primaryInstaller.Command + "');";
                }
                else
                {
                    primaryUri = primaryInstaller.Url;
                    primaryClick = "";
                }

                <a class="col-sm-10 btn btn-lg btn-primary" style="white-space: normal;" href="@primaryUri" onclick="@Html.Raw(primaryClick)" role="button">@primaryInstaller.Name</a>
            }
            <button type="button" class="col-sm-2 btn btn-primary btn-lg dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="caret"></span>
                <span class="sr-only">Toggle Dropdown</span>
            </button>
            <ul class="dropdown-menu btn-block">
                @foreach (var installer in Model.Installers)
                {
                    if (installer.Platform == Model.DetectedPlatform)
                    {
                        continue;
                    }

                    var href = "";
                    var onclick = "";
                    
                    if (installer.Url == null)
                    {
                        href = "#";
                        onclick = "$('#cmdmodal').modal(); $('#command').val('" + installer.Command + "');";
                    }
                    else
                    {
                        href = installer.Url;
                        onclick = "";
                    }

                    <li>
                        <a href="@href" onclick="@onclick">@installer.Name</a>
                    </li>
                }
                <li role="separator" class="divider"></li>
                <li><a href="https://protobuild.readthedocs.org/en/latest/getting_started_gui.html">Install GUI via the Command Line</a></li>
                <li><a href="https://protobuild.readthedocs.org/en/latest/getting_started_cmd.html">Use Command Line Tools</a></li>
            </ul>
        </div>
    </p>
</div>
<div class="modal fade" tabindex="-1" role="dialog" id="cmdmodal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <p class="form-inline" style="font-family: monospace; font-size: 18px; margin-bottom: 0px; margin-top: 15px; text-align: center;">Run this from your terminal: <br>
                <input class="form-control" id="command" value="" style="min-width: 450px; width: 75%; color: #FFF; background-color: #333; margin-top: 5px; margin-top: 15px; margin-bottom: 15px; text-align: center;"></p>
            </div>
        </div>
    </div>
</div>

<div class="row marketing">
    <h4><span class="glyphicon glyphicon-star"></span> One executable</h4>
    <p>
        Protobuild ships as a single, 150kb executable in your repository.  Users
        don't need to install any software; just double-click Protobuild to
        generate projects.
    </p>

    <h4><span class="glyphicon glyphicon-ban-circle"></span> No duplication</h4>
    <p>
        Don't duplicate support for each platform in multiple C# projects.
        Protobuild generates C# projects for any platform from a single
        definition, with options available to include and exclude
        resources based on the target platform.
    </p>

    <h4><span class="glyphicon glyphicon-refresh"></span> Two-way project sync</h4>
    <p>
        Reduce hand editing of project definition files.  Adding or removing
        files in your IDE synchronises back to the project when running
        Protobuild.
    </p>

    <h4><span class="glyphicon glyphicon-th"></span> Flexible configuration</h4>
    <p>
        Protobuild offers multiple levels of customization for your projects.
        From simple option toggles to complete customization of project files,
        Protobuild allows you to output projects in the exact format you require.
    </p>

    <h4><span class="glyphicon glyphicon-folder-close"></span> Package management</h4>
    <p>
        Protobuild includes a powerful package management system, which supports
        true cross-platform packages (so you can P/Invoke in a library),
        dual source/binary packages (allowing you to switch to source code for a library
        when you need to debug it) and support for NuGet.  <a href="/index">Find out more</a>.
    </p>

    <h4><span class="glyphicon glyphicon-leaf"></span> Build only what you need</h4>
    <p>
        Protobuild provides a powerful dependency system, which can exclude code
        in projects when no consuming projects use that functionality.  This can
        also be used to provide alternate implementations of functionality.
    </p>

    <h4><span class="glyphicon glyphicon-ban-circle"></span> No cruft</h4>
    <p>
        Project definitions in Protobuild contain only what is needed to
        generate your projects.  Irrelevant properties and C# project
        configuration (such as developer-specific settings)
        are never tracked in source control.
    </p>
</div>
